// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;
using WebSeite.Models;

namespace WebSeite.Migrations
{
    [DbContext(typeof(ProduktContext))]
    partial class ProduktContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WebSeite.Models.AnschriftGeschaeft", b =>
                {
                    b.Property<int>("AnschriftGeschaeftID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Email");

                    b.Property<string>("Fax");

                    b.Property<string>("Handy");

                    b.Property<string>("Hausnummer");

                    b.Property<string>("Homepage");

                    b.Property<int?>("Kundennummer");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<string>("OeffnungsZeitenDienstag");

                    b.Property<string>("OeffnungsZeitenDonnerstag");

                    b.Property<string>("OeffnungsZeitenFreitag");

                    b.Property<string>("OeffnungsZeitenMittwoch");

                    b.Property<string>("OeffnungsZeitenMontag");

                    b.Property<string>("OeffnungsZeitenSamstag");

                    b.Property<string>("OeffnungsZeitenSonntag");

                    b.Property<string>("Ort");

                    b.Property<int?>("PLZ");

                    b.Property<string>("Strasse");

                    b.Property<string>("Telefonnummer");

                    b.Property<string>("Zusatz");

                    b.HasKey("AnschriftGeschaeftID");

                    b.ToTable("Geschaeft");
                });

            modelBuilder.Entity("WebSeite.Models.AnschriftHersteller", b =>
                {
                    b.Property<int>("AnschriftHerstellerID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Email");

                    b.Property<string>("Fax");

                    b.Property<string>("Handy");

                    b.Property<string>("Hausnummer");

                    b.Property<string>("Homepage");

                    b.Property<int?>("Kundennummer");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<string>("Ort");

                    b.Property<int?>("PLZ");

                    b.Property<string>("Strasse");

                    b.Property<string>("Telefonnummer");

                    b.Property<string>("Zusatz");

                    b.HasKey("AnschriftHerstellerID");

                    b.ToTable("Hersteller");
                });

            modelBuilder.Entity("WebSeite.Models.Kategorie", b =>
                {
                    b.Property<int>("ProduktKategorieId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("ProduktKategorieId");

                    b.ToTable("Kategorie");
                });

            modelBuilder.Entity("WebSeite.Models.Preis", b =>
                {
                    b.Property<int>("PreisId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AnschriftGeschaeftID");

                    b.Property<double>("Kosten");

                    b.Property<string>("PreisDatum");

                    b.Property<int?>("ProduktId");

                    b.HasKey("PreisId");

                    b.HasIndex("AnschriftGeschaeftID");

                    b.HasIndex("ProduktId");

                    b.ToTable("Preis");
                });

            modelBuilder.Entity("WebSeite.Models.Produkt", b =>
                {
                    b.Property<int>("ProduktId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AnschriftHerstellerID");

                    b.Property<string>("Inhalt");

                    b.Property<int>("InhaltMesseinheit");

                    b.Property<bool>("IstBio");

                    b.Property<string>("ProduktKategorieId");

                    b.Property<int?>("ProduktKategorieId1");

                    b.Property<string>("ProduktName");

                    b.Property<string>("ProduktTyp");

                    b.Property<string>("Produktcode");

                    b.Property<string>("Zusatztext");

                    b.HasKey("ProduktId");

                    b.HasIndex("AnschriftHerstellerID");

                    b.HasIndex("ProduktKategorieId1");

                    b.ToTable("Produkt");
                });

            modelBuilder.Entity("WebSeite.Models.Preis", b =>
                {
                    b.HasOne("WebSeite.Models.AnschriftGeschaeft", "Anschrift")
                        .WithMany()
                        .HasForeignKey("AnschriftGeschaeftID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WebSeite.Models.Produkt", "Produkt")
                        .WithMany("Preis")
                        .HasForeignKey("ProduktId");
                });

            modelBuilder.Entity("WebSeite.Models.Produkt", b =>
                {
                    b.HasOne("WebSeite.Models.AnschriftHersteller", "Hersteller")
                        .WithMany()
                        .HasForeignKey("AnschriftHerstellerID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WebSeite.Models.Kategorie", "ProduktKategorie")
                        .WithMany()
                        .HasForeignKey("ProduktKategorieId1");
                });
#pragma warning restore 612, 618
        }
    }
}
